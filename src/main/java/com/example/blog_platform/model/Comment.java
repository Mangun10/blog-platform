package com.example.blog_platform.model;

import com.fasterxml.jackson.annotation.JsonBackReference;
import jakarta.persistence.*;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.time.LocalDateTime;

/**
 * Entity representing a comment on a blog post.
 *
 * This class maps to a 'comments' table in the database and establishes a
 * relationship
 * with the 'posts' table.
 */
@Entity
@Data // Lombok annotation to automatically generate getters, setters, toString, etc.
@NoArgsConstructor // Lombok annotation for a no-argument constructor
@Table(name = "comments") // Specifies the table name for this entity
public class Comment {

    @Id // Specifies the primary key of the entity
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Configures the ID to be auto-generated by the database
    private Long id;

    @Column(nullable = false) // Specifies that the content column cannot be null
    private String content;

    private String author;

    private LocalDateTime createdAt = LocalDateTime.now();

    /**
     * Defines a many-to-one relationship with the Post entity.
     * Multiple comments can belong to a single post.
     * The @JoinColumn specifies the foreign key column in the 'comments' table that
     * links to the primary key of the 'posts' table.
     * 
     * @JsonBackReference is used to manage the bidirectional relationship and
     *                    prevent
     *                    infinite recursion when serializing to JSON.
     */
    @ManyToOne(fetch = FetchType.LAZY) // Specifies the relationship type and a lazy fetch strategy
    @JoinColumn(name = "post_id", nullable = false)
    @JsonBackReference // This annotation is crucial for handling the bidirectional relationship
    private Post post;
}

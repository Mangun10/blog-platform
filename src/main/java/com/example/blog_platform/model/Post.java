package com.example.blog_platform.model;

import jakarta.persistence.*;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.AllArgsConstructor;
import java.util.List;
import java.time.LocalDateTime;

import com.fasterxml.jackson.annotation.JsonManagedReference;

/**
 * Represents a blog post entity. This class maps to a table in the database.
 * The annotations are used by Spring Data JPA and Hibernate to handle the
 * mapping and database operations.
 */
@Entity
@Table(name = "posts")
@Data // Lombok annotation to automatically generate getters, setters, toString(),
      // etc.
@NoArgsConstructor // Lombok annotation to generate a no-argument constructor
@AllArgsConstructor // Lombok annotation to generate a constructor with all arguments
public class Post {

    @Id // Marks this field as the primary key of the table
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Specifies that the ID will be auto-generated by the database
    private Long id;

    @Column(nullable = false) // Defines this field as a column in the table and ensures it cannot be null
    private String title;

    @Lob // Indicates that this field will hold large amounts of text
    @Column(nullable = false)
    private String content;

    @Column(nullable = false)
    private String author;

    @Column(name = "creation_date", updatable = false)
    private LocalDateTime creationDate;

    // A method that will be called before a new entity is persisted to set the
    // creation date.
    @PrePersist
    protected void onCreate() {
        this.creationDate = LocalDateTime.now();
    }

    @OneToMany(mappedBy = "post", cascade = CascadeType.ALL, orphanRemoval = true)
    @JsonManagedReference
    private List<Comment> comments;
}
